[{"comment":"/**\r\n\t\t * @name be.fiddle.HideEmptygroups\r\n\t\t * @instance\r\n\t\t * @public\r\n\t\t * @class\r\n\t\t * <p>the HideEmptygroups plugin is instantiated and managed by the Fiori launchpad\r\n\t\t * based on a target mapping in the configuration. You never, ever access it directly. Just\r\n\t\t * let the fiori launchpad manage things.</p>\r\n\t\t * <p>This plugin will override the standard visibility binding of each group and replace it with \r\n\t\t * a new formatter method. Based on the edit-mode and the number of tiles in the group, \r\n\t\t * we will return a new visibility boolean.</p>\r\n\t\t * <p>The result is that the group will be invisible if it contains no tiles, unless the user\r\n\t\t * is in personalization mode.</p>\r\n\t\t */","meta":{"filename":"Component.js","lineno":6,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{}},"name":"HideEmptygroups","scope":"static","access":"public","kind":"class","classdesc":"<p>the HideEmptygroups plugin is instantiated and managed by the Fiori launchpad\rbased on a target mapping in the configuration. You never, ever access it directly. Just\rlet the fiori launchpad manage things.</p>\r<p>This plugin will override the standard visibility binding of each group and replace it with \ra new formatter method. Based on the edit-mode and the number of tiles in the group, \rwe will return a new visibility boolean.</p>\r<p>The result is that the group will be invisible if it contains no tiles, unless the user\ris in personalization mode.</p>","memberof":"be.fiddle","longname":"be.fiddle.HideEmptygroups","$longname":"be.fiddle.HideEmptygroups","$kind":"class"},{"comment":"","meta":{"range":[804,1014],"filename":"Component.js","lineno":20,"columnno":6,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000017","name":"HideEmptygroups","type":"CallExpression","value":""}},"undocumented":true,"name":"HideEmptygroups","longname":"<anonymous>~HideEmptygroups","kind":"member","memberof":"<anonymous>","scope":"inner","params":[],"$longname":"HideEmptygroups","$kind":"property"},{"comment":"","meta":{"range":[962,1003],"filename":"Component.js","lineno":23,"columnno":4,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000025","name":"metadata","type":"ObjectExpression","value":"{\"manifest\":\"json\"}"}},"undocumented":true,"name":"metadata","longname":"be.fiddle.hideEmptyGroups.HideEmptygroups#metadata","kind":"member","memberof":"be.fiddle.hideEmptyGroups.HideEmptygroups","scope":"instance","$longname":"be.fiddle.hideEmptyGroups.HideEmptygroups#metadata","$kind":"property"},{"comment":"","meta":{"range":[980,996],"filename":"Component.js","lineno":24,"columnno":5,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000027","name":"manifest","type":"Literal","value":"json"}},"undocumented":true,"name":"manifest","longname":"be.fiddle.hideEmptyGroups.HideEmptygroups#metadata.manifest","kind":"member","memberof":"be.fiddle.hideEmptyGroups.HideEmptygroups#metadata","scope":"static","$longname":"be.fiddle.hideEmptyGroups.HideEmptygroups#metadata.manifest","$kind":"property"},{"comment":"/**\r\n\t\t * @method init\r\n\t\t * @public\r\n\t\t * @instance\r\n\t\t * @memberof be.fiddle.hideEmptyGroups.Component\r\n\t\t * <p>during the initialization phase of the hideemptyGroups plugin we'll:\r\n\t\t * <ul>\r\n\t\t * \t<li> wait for the launchpad to be rendered</li>\r\n\t\t * \t<li>then retrieve all instances of groups</li>\r\n\t\t * \t<li>for these, override the default visibility binding and add a formatter</li>\r\n\t\t * </ul>\r\n\t\t * since it's done on the control, it should in theory remain even after a re-rendering\r\n\t\t * or when tiles are added after an edit mode.\r\n\t\t * That way, we don't need to touch the DOM, and we don't need to listen to all possible \r\n\t\t * re-render events </p>\r\n\t\t * \r\n\t\t */","meta":{"filename":"Component.js","lineno":29,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{}},"kind":"function","name":"init","access":"public","scope":"instance","memberof":"be.fiddle.hideEmptyGroups.Component\r<p>during the initialization phase of the hideemptyGroups plugin we'll:\r<ul>\r\t<li> wait for the launchpad to be rendered</li>\r\t<li>then retrieve all instances of groups</li>\r\t<li>for these, override the default visibility binding and add a formatter</li>\r</ul>\rsince it's done on the control, it should in theory remain even after a re-rendering\ror when tiles are added after an edit mode.\rThat way, we don't need to touch the DOM, and we don't need to listen to all possible \rre-render events </p>","longname":"be.fiddle.hideEmptyGroups.Component\r<p>during the initialization phase of the hideemptyGroups plugin we'll:\r<ul>\r\t<li> wait for the launchpad to be rendered</li>\r\t<li>then retrieve all instances of groups</li>\r\t<li>for these, override the default visibility binding and add a formatter</li>\r</ul>\rsince it's done on the control, it should in theory remain even after a re-rendering\ror when tiles are added after an edit mode.\rThat way, we don't need to touch the DOM, and we don't need to listen to all possible \rre-render events </p>#init","$longname":"during the initialization phase of the hideemptyGroups plugin we'll:\r<ul>\r\t<li> wait for the launchpad to be rendered</li>\r\t<li>then retrieve all instances of groups</li>\r\t<li>for these, override the default visibility binding and add a formatter</li>\r</ul>\rsince it's done on the control, it should in theory remain even after a re-rendering\ror when tiles are added after an edit mode.\rThat way, we don't need to touch the DOM, and we don't need to listen to all possible \rre-render events </p>#init","$kind":"method"},{"comment":"","meta":{"range":[1702,2116],"filename":"Component.js","lineno":46,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000030","name":"HideEmptygroups.prototype.init","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":[]},"vars":{"this.repeater":"<anonymous>~HideEmptygroups#init#repeater"}},"undocumented":true,"name":"init","longname":"<anonymous>~HideEmptygroups#init","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#init","$kind":"method"},{"comment":"","meta":{"range":[2044,2110],"filename":"Component.js","lineno":50,"columnno":3,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000039","name":"this.repeater","type":"CallExpression","value":"","paramnames":[]}},"undocumented":true,"name":"repeater","longname":"<anonymous>~HideEmptygroups#init#repeater","kind":"member","memberof":"<anonymous>~HideEmptygroups#init","scope":"instance","$longname":"HideEmptygroups#init#repeater","$kind":"property"},{"comment":"/**\r\n\t\t * @method destroy\r\n\t\t * @public\r\n\t\t * @instance\r\n\t\t * @memberof be.fiddle.hideEmptyGroups.Component\r\n\t\t * <p>object destructor: remove any pending event handlers and taskrepeaters</p>\r\n\t\t */","meta":{"filename":"Component.js","lineno":53,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{}},"kind":"function","name":"destroy","access":"public","scope":"instance","memberof":"be.fiddle.hideEmptyGroups.Component\r<p>object destructor: remove any pending event handlers and taskrepeaters</p>","longname":"be.fiddle.hideEmptyGroups.Component\r<p>object destructor: remove any pending event handlers and taskrepeaters</p>#destroy","$longname":"object destructor: remove any pending event handlers and taskrepeaters</p>#destroy","$kind":"method"},{"comment":"","meta":{"range":[2326,2927],"filename":"Component.js","lineno":60,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000054","name":"HideEmptygroups.prototype.destroy","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":[]},"vars":{"launchpad":"<anonymous>~HideEmptygroups#destroy~launchpad","":null}},"undocumented":true,"name":"destroy","longname":"<anonymous>~HideEmptygroups#destroy","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#destroy","$kind":"method"},{"comment":"","meta":{"range":[2502,2559],"filename":"Component.js","lineno":66,"columnno":7,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000074","name":"launchpad","type":"CallExpression","value":""}},"undocumented":true,"name":"launchpad","longname":"<anonymous>~HideEmptygroups#destroy~launchpad","kind":"member","memberof":"<anonymous>~HideEmptygroups#destroy","scope":"inner","params":[],"$longname":"HideEmptygroups#destroy~launchpad","$kind":"property"},{"comment":"","meta":{"range":[2659,2729],"filename":"Component.js","lineno":69,"columnno":8,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000099","name":"domGroups","type":"LogicalExpression","value":""}},"undocumented":true,"name":"domGroups","longname":"<anonymous>~domGroups","kind":"member","memberof":"<anonymous>","scope":"inner","params":[],"$longname":"domGroups","$kind":"property"},{"comment":"/**\r\n\t\t * @method processGroups\r\n\t\t * @public\r\n\t\t * @instance\r\n\t\t * @memberof be.fiddle.hideEmptyGroups.Component\r\n\t\t * <p>get groups and override the visibility of each</p>\r\n\t\t */","meta":{"filename":"Component.js","lineno":77,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{}},"kind":"function","name":"processGroups","access":"public","scope":"instance","memberof":"be.fiddle.hideEmptyGroups.Component\r<p>get groups and override the visibility of each</p>","longname":"be.fiddle.hideEmptyGroups.Component\r<p>get groups and override the visibility of each</p>#processGroups","$longname":"get groups and override the visibility of each</p>#processGroups","$kind":"method"},{"comment":"","meta":{"range":[3118,3645],"filename":"Component.js","lineno":84,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000134","name":"HideEmptygroups.prototype.processGroups","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":[]},"vars":{"launchpad":"<anonymous>~HideEmptygroups#processGroups~launchpad","":null}},"undocumented":true,"name":"processGroups","longname":"<anonymous>~HideEmptygroups#processGroups","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#processGroups","$kind":"method"},{"comment":"","meta":{"range":[3325,3382],"filename":"Component.js","lineno":87,"columnno":7,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000143","name":"launchpad","type":"CallExpression","value":""}},"undocumented":true,"name":"launchpad","longname":"<anonymous>~HideEmptygroups#processGroups~launchpad","kind":"member","memberof":"<anonymous>~HideEmptygroups#processGroups","scope":"inner","params":[],"$longname":"HideEmptygroups#processGroups~launchpad","$kind":"property"},{"comment":"","meta":{"range":[3482,3552],"filename":"Component.js","lineno":90,"columnno":8,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000168","name":"domGroups","type":"LogicalExpression","value":""}},"undocumented":true,"name":"domGroups","longname":"<anonymous>~domGroups","kind":"member","memberof":"<anonymous>","scope":"inner","params":[],"$longname":"domGroups","$kind":"property"},{"comment":"","meta":{"range":[3948,4656],"filename":"Component.js","lineno":103,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000192","name":"HideEmptygroups.prototype.overrideGroupVisibility","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":["domGroup"]},"vars":{"group":"<anonymous>~HideEmptygroups#overrideGroupVisibility~group"}},"undocumented":true,"name":"overrideGroupVisibility","longname":"<anonymous>~HideEmptygroups#overrideGroupVisibility","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#overrideGroupVisibility","$kind":"method"},{"comment":"","meta":{"range":[4082,4124],"filename":"Component.js","lineno":105,"columnno":7,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000202","name":"group","type":"CallExpression","value":""}},"undocumented":true,"name":"group","longname":"<anonymous>~HideEmptygroups#overrideGroupVisibility~group","kind":"member","memberof":"<anonymous>~HideEmptygroups#overrideGroupVisibility","scope":"inner","params":[],"$longname":"HideEmptygroups#overrideGroupVisibility~group","$kind":"property"},{"comment":"","meta":{"range":[4355,4549],"filename":"Component.js","lineno":110,"columnno":4,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000223","name":"parts","type":"ArrayExpression","value":"[\"/tileActionModeActive\",\"tiles\"]"}},"undocumented":true,"name":"parts","longname":"parts","kind":"member","scope":"global","$longname":"parts","$kind":"property"},{"comment":"","meta":{"range":[4556,4582],"filename":"Component.js","lineno":114,"columnno":4,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000227","name":"formatter","type":"MemberExpression","value":"this.isVisible"}},"undocumented":true,"name":"formatter","longname":"formatter","kind":"member","scope":"global","$longname":"formatter","$kind":"property"},{"comment":"","meta":{"range":[4953,5207],"filename":"Component.js","lineno":126,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000232","name":"HideEmptygroups.prototype.resetGroupVisibility","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":["domGroup"]},"vars":{"group":"<anonymous>~HideEmptygroups#resetGroupVisibility~group"}},"undocumented":true,"name":"resetGroupVisibility","longname":"<anonymous>~HideEmptygroups#resetGroupVisibility","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#resetGroupVisibility","$kind":"method"},{"comment":"","meta":{"range":[5084,5126],"filename":"Component.js","lineno":128,"columnno":7,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000242","name":"group","type":"CallExpression","value":""}},"undocumented":true,"name":"group","longname":"<anonymous>~HideEmptygroups#resetGroupVisibility~group","kind":"member","memberof":"<anonymous>~HideEmptygroups#resetGroupVisibility","scope":"inner","params":[],"$longname":"HideEmptygroups#resetGroupVisibility~group","$kind":"property"},{"comment":"","meta":{"range":[5167,5197],"filename":"Component.js","lineno":129,"columnno":35,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000263","name":"path","type":"Literal","value":"/tileActionModeActive"}},"undocumented":true,"name":"path","longname":"path","kind":"member","scope":"global","$longname":"path","$kind":"property"},{"comment":"/**\r\n\t\t * @method isVisible\r\n\t\t * @param {boolean} tileActionMode - this is the property on the launchpad that defines if the user is editing the launchpad config (personalization)\r\n\t\t * @param {array} tiles - an array containing the tile-controls in the current group\r\n\t\t * @returns {boolean} will the group be visible or not\r\n\t\t * @memberof be.fiddle.hideEmptyGroups.Component\r\n\t\t * \r\n\t\t * <p>The isVisible-method is a formatter. We do not call it directly ourselvs.\r\n\t\t * The UI5 binding framework takes care of the call, everytime one of the bound properties\r\n\t\t * changes. The result of the formatter function is that the group will be invisible if it \r\n\t\t * contains no tiles, unless the user is in personalization mode. </p>\r\n\t\t */","meta":{"filename":"Component.js","lineno":132,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{}},"kind":"function","name":"isVisible","params":[{"type":{"names":["boolean"]},"description":"this is the property on the launchpad that defines if the user is editing the launchpad config (personalization)","name":"tileActionMode"},{"type":{"names":["array"]},"description":"an array containing the tile-controls in the current group","name":"tiles"}],"returns":[{"type":{"names":["boolean"]},"description":"will the group be visible or not"}],"memberof":"be.fiddle.hideEmptyGroups.Component\r\r<p>The isVisible-method is a formatter. We do not call it directly ourselvs.\rThe UI5 binding framework takes care of the call, everytime one of the bound properties\rchanges. The result of the formatter function is that the group will be invisible if it \rcontains no tiles, unless the user is in personalization mode. </p>","scope":"static","longname":"be.fiddle.hideEmptyGroups.Component\r\r<p>The isVisible-method is a formatter. We do not call it directly ourselvs.\rThe UI5 binding framework takes care of the call, everytime one of the bound properties\rchanges. The result of the formatter function is that the group will be invisible if it \rcontains no tiles, unless the user is in personalization mode. </p>.isVisible","$longname":"The isVisible-method is a formatter. We do not call it directly ourselvs.\rThe UI5 binding framework takes care of the call, everytime one of the bound properties\rchanges. The result of the formatter function is that the group will be invisible if it \rcontains no tiles, unless the user is in personalization mode. </p>.isVisible","$kind":"method"},{"comment":"","meta":{"range":[5956,6266],"filename":"Component.js","lineno":144,"columnno":2,"path":"D:\\Projects\\FiddleBe\\ui5\\plugins\\hideemptygroups\\webapp","code":{"id":"astnode100000266","name":"HideEmptygroups.prototype.isVisible","type":"FunctionExpression","funcscope":"<anonymous>","paramnames":["tileActionMode","tiles"]}},"undocumented":true,"name":"isVisible","longname":"<anonymous>~HideEmptygroups#isVisible","kind":"function","memberof":"<anonymous>~HideEmptygroups","scope":"instance","$longname":"HideEmptygroups#isVisible","$kind":"method"}]